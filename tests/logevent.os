#Использовать ".."
#Использовать asserts
#Использовать "features"

&Тест
Процедура Тест_Токенайзер1() Экспорт

	// Дано
	Спека = Новый Массив();
	Спека.Добавить(Новый СпецификацияТокенПробелы(Истина));
	Спека.Добавить(Новый СпецификацияТокенСимвол("{", "Открыть"));
	Спека.Добавить(Новый СпецификацияТокенСимвол("}", "Закрыть"));
	Спека.Добавить(Новый СпецификацияТокенСимвол(",", "Запятая"));
	Спека.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("(1CV8LOG)|(\(\w+ \d.\d\))"), "Версия"));
	Спека.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}$"), "Гуид"));
	Спека.Добавить(Новый СпецификацияТокенРегулярноеВыражение(Новый РегулярноеВыражение("[\da-z]+"), "Идентификатор"));
	Спека.Добавить(Новый СпецификацияТокенСтрока());
	Спека.Добавить(Новый СпецификацияТокенЧисло());
	Спека.Добавить(Новый СпецификацияТокенСимвол(Символы.ПС, "ПереносСтроки"));
	Токенайзер = Новый Токенайзер(Спека);

	ЧтениеТекста = Новый ЧтениеТекста("tests/features/small.lgp");
	Текст = ЧтениеТекста.Прочитать();
	ЧтениеТекста.Закрыть();

	// Когда
	Токенайзер.Инит(Текст);

	Скобарь = Новый ПарсерСкобки(Токенайзер);
	Результат = Скобарь.Распарсить();

	// Тогда
	Ожидаем.Что(Результат.Количество()).Равно(2);
	Ожидаем.Что(Результат[0].Количество()).Равно(19);
	Ожидаем.Что(Результат[1].Количество()).Равно(19);
	Ожидаем.Что(Результат[0][2].Количество()).Равно(2);
	Ожидаем.Что(Результат[1][2].Количество()).Равно(2);

КонецПроцедуры